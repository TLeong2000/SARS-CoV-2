import datetime
import os
import numpy as np

abspath = os.path.abspath(__file__)
dname = os.path.dirname(abspath)
os.chdir(dname)

directory = input("Enter the directory to the LAMMPS dat file " + \
                      "to be converted (without quotations): ")
directory = directory.strip()

while True:
    if not os.path.isfile(directory):
        directory = input("The file/directory you entered does not exist. "+ \
                          "Please re-enter: ")
    else:
        dat_file = list(filter(None, open(directory, 'r').read().split('\n')))
        dat_file = [x.strip() for x in dat_file]
        break

headers = ["atoms", "bonds", "angles", "dihedrals", "impropers", "fragments"]
header_start = False
body_start = False

atoms_start = False
atoms_end = False

molecules_start = False
charges_start = False

bodies = ["Masses", "Bonds", "Angles", "Dihedrals", "Impropers"]
bodies_start = False

mol_file = open(directory.replace(".dat", ".mol"),'w')
mol_file.truncate(0)

for index, line in enumerate(dat_file):
    if index == 1:
        mol_file.write("#LAMMPS mol file generated by Dat2Mol.py on ")
        mol_file.write(str(datetime.datetime.now()))
        mol_file.write('\n')
        mol_file.write('\n')
        
    if any(header in line for header in headers):
        if "atoms" in line:
            num_atoms = int(line.split()[0])
        if header_start == False:
            header_start = True
        print(line)
        mol_file.write(line)
        mol_file.write('\n')

    if atoms_start == True and atoms_end == False:
        if line[0].isdigit():
            atoms_line = line.split()
            types_array[int(atoms_line[0]) - 1] = atoms_line[2]
            charges_array[int(atoms_line[0]) - 1] = atoms_line[3]
            for x in range(0,3):
                coords_array[int(atoms_line[0]) - 1, x] = atoms_line[4 + x]
        else:
            atoms_end = True
            mol_file.write('\n')
            mol_file.write("Coords\n\n")
            
            for x in range(1, num_atoms + 1):
                mol_file.write(str(x) + ' ')
                for y in range(0,3):
                    mol_file.write(str(coords_array[x - 1, y]) + ' ')
                mol_file.write('\n')
            
            mol_file.write('\n')
            mol_file.write("Types\n\n")
            
            for x in range(1,num_atoms + 1):
                mol_file.write(str(x) + ' ' + str(types_array[x - 1]) + '\n')
            
            mol_file.write('\n')
        
    if "Atoms" in line:
        atoms_start = True
        coords_array = np.empty([num_atoms, 3])
        types_array = np.empty(num_atoms, dtype=int)
        charges_array = np.empty(num_atoms)
    
        
    if atoms_end == True:
        if molecules_start == False:
            mol_file.write("Molecules\n\n")
            for x in range(1, num_atoms + 1):
                mol_file.write(str(x) + ' ' + str(1) + '\n')
            mol_file.write('\n\n')
            molecules_start = True
            
        if charges_start == False:
            mol_file.write("Charges\n\n")
            for x in range(1, num_atoms + 1):
                    mol_file.write(str(x) + ' ' + str(charges_array[x - 1]) + '\n')
            mol_file.write('\n\n')
            charges_start = True
            
        if line in bodies:
            mol_file.write('\n')
            mol_file.write(line)
            mol_file.write('\n\n')
            body_start = True
        elif line not in bodies:
            if line[0].isnumeric():
                mol_file.write(line)
                mol_file.write('\n')
            else:
                body_start = False
                mol_file.write('\n\n')     
    
mol_file.close()
